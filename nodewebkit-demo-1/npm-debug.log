0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'install', '-g', 'iconv' ]
2 info using npm@1.3.14
3 info using node@v0.10.22
4 verbose node symlink /usr/bin/node
5 verbose cache add [ 'iconv', null ]
6 verbose cache add name=undefined spec="iconv" args=["iconv",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: 'iconv',
7 verbose parsed url   path: 'iconv',
7 verbose parsed url   href: 'iconv' }
8 silly lockFile b77bb132-iconv iconv
9 verbose lock iconv /home/paul/.npm/b77bb132-iconv.lock
10 silly lockFile b77bb132-iconv iconv
11 silly lockFile b77bb132-iconv iconv
12 verbose addNamed [ 'iconv', '' ]
13 verbose addNamed [ null, '*' ]
14 silly lockFile 7ff3175f-iconv iconv@
15 verbose lock iconv@ /home/paul/.npm/7ff3175f-iconv.lock
16 silly addNameRange { name: 'iconv', range: '*', hasData: false }
17 verbose url raw iconv
18 verbose url resolving [ 'https://registry.npmjs.org/', './iconv' ]
19 verbose url resolved https://registry.npmjs.org/iconv
20 info trying registry request attempt 1 at 16:12:39
21 verbose etag "9LKV1OXCLOV89G6W6NG2Z53KX"
22 http GET https://registry.npmjs.org/iconv
23 http 304 https://registry.npmjs.org/iconv
24 silly registry.get cb [ 304,
24 silly registry.get   { server: 'CouchDB/1.5.0 (Erlang OTP/R15B03)',
24 silly registry.get     etag: '"9LKV1OXCLOV89G6W6NG2Z53KX"',
24 silly registry.get     date: 'Mon, 25 Nov 2013 08:12:41 GMT',
24 silly registry.get     'content-length': '0' } ]
25 verbose etag iconv from cache
26 silly addNameRange number 2 { name: 'iconv', range: '*', hasData: true }
27 silly addNameRange versions [ 'iconv',
27 silly addNameRange   [ '1.0.0',
27 silly addNameRange     '1.0.1',
27 silly addNameRange     '1.1.0',
27 silly addNameRange     '1.1.1',
27 silly addNameRange     '1.1.2',
27 silly addNameRange     '1.1.3',
27 silly addNameRange     '1.2.0',
27 silly addNameRange     '1.2.1',
27 silly addNameRange     '1.2.2',
27 silly addNameRange     '1.2.3',
27 silly addNameRange     '1.2.4',
27 silly addNameRange     '2.0.0',
27 silly addNameRange     '2.0.1',
27 silly addNameRange     '2.0.2',
27 silly addNameRange     '2.0.3',
27 silly addNameRange     '2.0.4',
27 silly addNameRange     '2.0.5',
27 silly addNameRange     '2.0.6',
27 silly addNameRange     '2.0.7' ] ]
28 verbose addNamed [ 'iconv', '2.0.7' ]
29 verbose addNamed [ '2.0.7', '2.0.7' ]
30 silly lockFile 791b100d-iconv-2-0-7 iconv@2.0.7
31 verbose lock iconv@2.0.7 /home/paul/.npm/791b100d-iconv-2-0-7.lock
32 silly lockFile 791b100d-iconv-2-0-7 iconv@2.0.7
33 silly lockFile 791b100d-iconv-2-0-7 iconv@2.0.7
34 silly lockFile 7ff3175f-iconv iconv@
35 silly lockFile 7ff3175f-iconv iconv@
36 silly resolved [ { name: 'iconv',
36 silly resolved     main: './lib/iconv',
36 silly resolved     version: '2.0.7',
36 silly resolved     description: 'Text recoding in JavaScript for fun and profit!',
36 silly resolved     homepage: 'https://github.com/bnoordhuis/node-iconv',
36 silly resolved     repository:
36 silly resolved      { type: 'git',
36 silly resolved        url: 'git://github.com/bnoordhuis/node-iconv.git' },
36 silly resolved     author: { name: 'Ben Noordhuis', email: 'info@bnoordhuis.nl' },
36 silly resolved     engines: { node: '>=0.8.0' },
36 silly resolved     license: 'ISC',
36 silly resolved     readmeFilename: 'README.md',
36 silly resolved     scripts: { install: 'node-gyp rebuild' },
36 silly resolved     gypfile: true,
36 silly resolved     readme: '# node-iconv\n\nText recoding in JavaScript for fun and profit!\n\nnode-iconv may or may not work on Windows. Please try it and report any issues\nyou have.\n\n## Installing with [npm](http://npmjs.org/)\n\n    $ npm install iconv\n\nNote that you do not need to have a copy of libiconv installed to use this\nmodule.\n\n## Compiling from source\n\n    $ git clone git://github.com/bnoordhuis/node-iconv.git\n    $ node-gyp configure build\n    $ npm install .\n\n## Usage\n\nEncode from one character encoding to another:\n\n    // convert from UTF-8 to ISO-8859-1\n    var Buffer = require(\'buffer\').Buffer;\n    var Iconv  = require(\'iconv\').Iconv;\n    var assert = require(\'assert\');\n\n    var iconv = new Iconv(\'UTF-8\', \'ISO-8859-1\');\n    var buffer = iconv.convert(\'Hello, world!\');\n    var buffer2 = iconv.convert(new Buffer(\'Hello, world!\'));\n    assert.equals(buffer.inspect(), buffer2.inspect());\n    // do something useful with the buffers\n\nA simple ISO-8859-1 to UTF-8 conversion TCP service:\n\n    var net = require(\'net\');\n    var Iconv = require(\'iconv\').Iconv;\n    var server = net.createServer(function(conn) {\n      var iconv = new Iconv(\'latin1\', \'utf-8\');\n      conn.pipe(iconv).pipe(conn);\n    });\n    server.listen(8000);\n    console.log(\'Listening on tcp://0.0.0.0:8000/\');\n\nLook at test/test-basic.js and test/test-stream.js for more examples\nand node-iconv\'s behaviour under error conditions.\n\n## Notes\n\nThings to keep in mind when you work with node-iconv.\n\n### Chunked data\n\nSay you are reading data in chunks from a HTTP stream. The logical input is a\nsingle document (the full POST request data) but the physical input will be\nspread over several buffers (the request chunks).\n\nYou must accumulate the small buffers into a single large buffer before\nperforming the conversion. If you don\'t, you will get unexpected results with\nmulti-byte and stateful character sets like UTF-8 and ISO-2022-JP.\n\n[node-buffertools](http://github.com/bnoordhuis/node-buffertools) lets you\nconcatenate buffers painlessly. See the description of `buffertools.concat()`\nfor details.\n\n### Dealing with untranslatable characters\n\nCharacters are not always translatable to another encoding. The UTF-8 string\n"ça va が", for example, cannot be represented in plain 7-bits ASCII without\nsome loss of fidelity.\n\nBy default, node-iconv throws EILSEQ when untranslatabe characters are\nencountered but this can be customized. Quoting the `iconv_open(3)` man page:\n\n    //TRANSLIT\n    When  the  string  "//TRANSLIT"  is appended to tocode, transliteration is\n    activated. This means that when a character cannot be represented in the\n    target character set, it can be approximated through one or several\n    similarly looking characters.\n\n    //IGNORE\n    When the string "//IGNORE" is appended to tocode, characters that cannot be\n    represented in the target character set will be silently discarded.\n\nExample usage:\n\n    var iconv = new Iconv(\'UTF-8\', \'ASCII\');\n    iconv.convert(\'ça va\'); // throws EILSEQ\n\n    var iconv = new Iconv(\'UTF-8\', \'ASCII//IGNORE\');\n    iconv.convert(\'ça va\'); // returns "a va"\n\n    var iconv = new Iconv(\'UTF-8\', \'ASCII//TRANSLIT\');\n    iconv.convert(\'ça va\'); // "ca va"\n\n    var iconv = new Iconv(\'UTF-8\', \'ASCII//TRANSLIT//IGNORE\');\n    iconv.convert(\'ça va が\'); // "ca va "\n\n### EINVAL\n\nEINVAL is raised when the input ends in a partial character sequence. This is a\nfeature, not a bug.\n',
36 silly resolved     bugs: { url: 'https://github.com/bnoordhuis/node-iconv/issues' },
36 silly resolved     _id: 'iconv@2.0.7',
36 silly resolved     _from: 'iconv@' } ]
37 info install iconv@2.0.7 into /usr/lib
38 info installOne iconv@2.0.7
39 info /usr/lib/node_modules/iconv unbuild
40 verbose tar unpack /home/paul/.npm/iconv/2.0.7/package.tgz
41 silly lockFile 548f76e6-tar-usr-lib-node-modules-iconv tar:///usr/lib/node_modules/iconv
42 verbose lock tar:///usr/lib/node_modules/iconv /home/paul/.npm/548f76e6-tar-usr-lib-node-modules-iconv.lock
43 silly lockFile a501b76d-paul-npm-iconv-2-0-7-package-tgz tar:///home/paul/.npm/iconv/2.0.7/package.tgz
44 verbose lock tar:///home/paul/.npm/iconv/2.0.7/package.tgz /home/paul/.npm/a501b76d-paul-npm-iconv-2-0-7-package-tgz.lock
45 silly gunzTarPerm modes [ '755', '644' ]
46 error Error: EACCES, mkdir '/usr/lib/node_modules/iconv'
46 error  { [Error: EACCES, mkdir '/usr/lib/node_modules/iconv']
46 error   errno: 3,
46 error   code: 'EACCES',
46 error   path: '/usr/lib/node_modules/iconv',
46 error   fstream_type: 'Directory',
46 error   fstream_path: '/usr/lib/node_modules/iconv',
46 error   fstream_class: 'DirWriter',
46 error   fstream_stack:
46 error    [ '/usr/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23',
46 error      '/usr/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53',
46 error      'Object.oncomplete (fs.js:107:15)' ] }
47 error Please try running this command again as root/Administrator.
48 error System Linux 3.8.0-33-generic
49 error command "/usr/bin/node" "/usr/bin/npm" "install" "-g" "iconv"
50 error cwd /home/paul/nodewebkit-demo
51 error node -v v0.10.22
52 error npm -v 1.3.14
53 error path /usr/lib/node_modules/iconv
54 error fstream_path /usr/lib/node_modules/iconv
55 error fstream_type Directory
56 error fstream_class DirWriter
57 error code EACCES
58 error errno 3
59 error stack Error: EACCES, mkdir '/usr/lib/node_modules/iconv'
60 error fstream_stack /usr/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23
60 error fstream_stack /usr/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53
60 error fstream_stack Object.oncomplete (fs.js:107:15)
61 verbose exit [ 3, true ]
