// Generated by CoffeeScript 1.6.3
(function() {
  var Kids, age, ages, awardMedals, changeNumbers, child, countdown, date, evens, fill, food, foods, gold, inner, lyrics, mood, my, name, num, outer, rest, shortNames, silver, singers, square, sum, times, x, yearsOld, _i, _j, _len, _len1, _ref, _ref1,
    __slice = [].slice,
    __hasProp = {}.hasOwnProperty;

  square = function(x) {
    return x * x;
  };

  fill = function(container, liquid) {
    if (liquid == null) {
      liquid = "coffee";
    }
    return "Filling thie " + container + " with " + liquid;
  };

  singers = {
    Jagger: "Rock",
    Elvis: "Roll"
  };

  Kids = {
    brother: {
      name: "Max",
      age: 11
    },
    sister: {
      name: "Ida",
      age: 9
    }
  };

  $('.account').attr({
    "class": {
      text: 'like',
      life: 'life'
    }
  });

  outer = 1;

  changeNumbers = function() {
    var inner;
    inner = -1;
    return outer = 10;
  };

  inner = changeNumbers();

  if (singing) {
    mood = greatlyImproved;
  }

  if (happy && knowsIt) {
    clapsHands();
    chaChaCha();
  } else {
    showIt();
  }

  date = friday ? sue : jill;

  gold = silver = rest = "unknow";

  awardMedals = function() {
    var first, others, second;
    first = arguments[0], second = arguments[1], others = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
    gold = first;
    silver = second;
    return rest = others;
  };

  _ref = ['toast', 'cheese', 'wine'];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    food = _ref[_i];
    eat(food);
  }

  foods = ['broccoli', 'spinach', 'chocolate'];

  for (_j = 0, _len1 = foods.length; _j < _len1; _j++) {
    food = foods[_j];
    if (food !== 'chocolate') {
      eat(food);
    }
  }

  shortNames = (function() {
    var _k, _len2, _results;
    _results = [];
    for (_k = 0, _len2 = list.length; _k < _len2; _k++) {
      name = list[_k];
      if (name.length < 5) {
        _results.push(name);
      }
    }
    return _results;
  })();

  countdown = (function() {
    var _k, _results;
    _results = [];
    for (num = _k = 10; _k >= 1; num = --_k) {
      _results.push(num);
    }
    return _results;
  })();

  evens = (function() {
    var _k, _results;
    _results = [];
    for (x = _k = 0; _k <= 10; x = _k += 2) {
      _results.push(x);
    }
    return _results;
  })();

  yearsOld = {
    max: 10,
    ida: 9,
    tim: 11
  };

  ages = (function() {
    var _results;
    _results = [];
    for (child in yearsOld) {
      age = yearsOld[child];
      _results.push("" + child + " is " + age);
    }
    return _results;
  })();

  ages = (function() {
    var _results;
    _results = [];
    for (child in yearsOld) {
      if (!__hasProp.call(yearsOld, child)) continue;
      age = yearsOld[child];
      _results.push("" + child + " is " + age);
    }
    return _results;
  })();

  if (this.studyingEconomics) {
    while (supply > demand) {
      buy();
    }
    while (supply > demand) {
      sell();
    }
  }

  num = 6;

  lyrics = (function() {
    var _results;
    _results = [];
    while (num -= 1) {
      _results.push("" + num + " little mokeys , jumping on the bed");
    }
    return _results;
  })();

  if (!true) {
    "false";
  }

  if (!true) {
    "false";
  }

  my = "my string".slice(0, 2);

  if ("1" === 1) {
    console.log("equal");
  } else {
    console.log("not equal");
  }

  if (!true) {
    console.log("ll");
  }

  if (typeof d !== "undefined" && d !== null) {
    console.log("dd");
  }

  my || (my = {});

  if ((_ref1 = my.hasword()) != null) {
    _ref1.poke();
  }

  if (typeof my.hasword === "function") {
    my.hasword();
  }

  switch (day) {
    case "Sun":
      console.log('go relax');
      break;
    case "Sat":
      console.log('go dancing');
      break;
    default:
      console.log('go lang');
  }

  sum = function(x, y) {
    return x + y;
  };

  times = function(a, b) {
    if (a == null) {
      a = 1;
    }
    if (b == null) {
      b = 2;
    }
    return a * b;
  };

}).call(this);
