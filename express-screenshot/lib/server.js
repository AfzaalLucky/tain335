// Generated by CoffeeScript 1.6.3
(function() {
  module.exports = (function() {
    var acceptJob, config, configMod, router, spawn, workerMan, ws, wsserver;
    ws = require('websocket-server');
    configMod = require('./config');
    spawn = require('child_process').spawn;
    router = require('./router');
    config = configMod.get();
    wsserver = {
      init: function() {
        var _this = this;
        this.socket = ws.createServer();
        this.socket.addListener('connection', function(conn) {
          router.addToBoxMap(conn, _this.socket);
          return conn.addListener('close', function() {
            return router.removeBox(conn);
          });
        });
        return this.socket.listen(config.wsPort);
      }
    };
    workerMan = {
      sub: 'w',
      mid: 0,
      init: function() {
        var _results;
        _results = [];
        while (config.workerNum--) {
          _results.push(this.createWorker());
        }
        return _results;
      },
      getId: function() {
        return this.sub + this.mid++ + Math.round(Math.random() * 10);
      },
      createWorker: function() {
        var id, worker;
        id = this.getId();
        console.log('createWorker ' + id);
        worker = spawn('phantomjs', [__dirname + '/worker.js', '--disk-cache=true']);
        return worker.on('close', function(code) {
          console.log(code);
          return console.log('worker ' + id + ' died');
        });
      }
    };
    acceptJob = function(job) {
      return router.emit('dispatch', job);
    };
    return {
      acceptJob: acceptJob,
      initServer: wsserver.init.bind(wsserver),
      initWorker: workerMan.init.bind(workerMan)
    };
  })();

}).call(this);
